# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

name: 1.0.$(Rev:r)

trigger:
  batch: true
  branches:
    include:
    - master
    - release
  paths:
    exclude:
    - README.md
    - CONTRIBUTING.md
    - LICENSE

pr:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - CONTRIBUTING.md
    - LICENSE

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      submodules: recursive

    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm ci
      displayName: 'Install npm Packages'

    - script: |
        npm run build-prd
      displayName: 'Build'

    - publish: 'dist/web-portal'
      artifact: WebPortal
      displayName: 'Publish Build Result'

    - task: NuGetCommand@2
      inputs:
        command: 'pack'
        packagesToPack: 'Microsoft.HPC.WebPortal.nuspec'
        versioningScheme: 'byBuildNumber'
        packDestination: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Make NuGet Package'

    - publish: Microsoft.HPC.WebPortal.*.nupkg
      artifact: 'NuGet Package'
      displayName: 'Publish NuGet Package'

#   - task: NuGetCommand@2
#     condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
#     inputs:
#       command: 'push'
#       packagesToPush: $(Build.ArtifactStagingDirectory)/**/Microsoft.HPC.WebPortal.*.nupkg
#       nuGetFeedType: 'internal'
#       publishVstsFeed: $(VstsFeed)
#     displayName: 'Publish NuGet Package'


# The deploy is blocked on issue:
# https://github.com/microsoft/azure-pipelines-tasks/issues/11158
#
# - stage: Deploy
#   dependsOn: Build
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
#   jobs:
#   - job: Deploy
#     pool:
#       vmImage: windows-latest
#     steps:
#     - checkout: none
#
#     - download: current
#       artifact: WebPortal
#
#     - task: AzureFileCopy@3
#       inputs:
#         SourcePath: '$(Pipeline.Workspace)/WebPortal'
#         azureSubscription: $(Subscription)
#         resourceGroup: $(ResourceGroup)
#         storage: $(StorageAccount)
#         Destination: 'AzureVMs'
#         ResourceFilteringMethod: machineNames
#         MachineNames: $(TargetHosts)
#         vmsAdminUserName: $(TargetHosts.AdminUserName)
#         vmsAdminPassword: $(TargetHosts.AdminPassword)
#         TargetPath: $(TargetHosts.Path)
#         CleanTargetBeforeCopy: true
#         enableCopyPrerequisites: true
#       displayName: 'Deploy to $(TargetHosts)'
